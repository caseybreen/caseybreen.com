facet_wrap(~risk)
estimated_mortality_rates <- dmf %>%
filter(byear %in% c(1890:1905)) %>%
filter(race == "White Americans" | race == "Black Americans") %>%
group_by(death_age, race) %>%
summarize(weighted_total = n()) %>%
group_by(race) %>%
mutate(lx = sum(weighted_total) - cumsum(weighted_total) + weighted_total) %>%
mutate(mx = weighted_total/(lx + lead(lx) / 2)) %>%
mutate(hazard = log(mx))
pooled_bwcrossover <- estimated_mortality_rates %>%
filter(death_age %in% c(75:100)) %>%
ggplot() +
geom_point(aes(x = death_age, y = hazard, shape = race, color = race), size = 4) +
geom_line(aes(x = death_age, y = hazard, color = race)) +
theme_bw(base_size = 25) +
geom_vline(xintercept  = 86, linetype = "dashed") +
theme(legend.position="bottom") +
labs(x = "Age",
y = "Log(Mx)",
title = "Mortality Crossovers (Men)",
subtitle = "Pooled cohorts of 1890 - 1905") +
ggsci::scale_colour_lancet() +
theme(legend.title=element_blank()) +
theme(
legend.position = c(.999, 0.001),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(color = "black", size = .5, linetype = "solid"))
pooled_bwcrossover
estimated_mortality_rates <- dmf %>%
filter(byear %in% c(1890:1905)) %>%
filter(!is.na(educ_yrs)) %>%
filter(race == "White Americans" | race == "Black Americans") %>%
group_by(race) %>%
mutate(educ_decile = ntile(educ_yrs, 5)) %>%
group_by(death_age, race, educ_decile) %>%
summarize(weighted_total = n()) %>%
group_by(race, educ_decile) %>%
mutate(lx = sum(weighted_total) - cumsum(weighted_total) + weighted_total) %>%
mutate(mx = weighted_total/(lx + lead(lx) / 2)) %>%
mutate(hazard = log(mx))
plot <- estimated_mortality_rates %>%
filter(death_age %in% c(75:100)) %>%
ggplot() +
geom_point(aes(x = death_age, y = hazard, shape = race, color = race), size = 4) +
geom_line(aes(x = death_age, y = hazard, color = race)) +
theme_bw(base_size = 25) +
geom_vline(xintercept  = 86, linetype = "dashed") +
theme(legend.position="bottom") +
labs(x = "Age",
y = "Log(Mx)",
title = "Mortality Crossovers (Men)",
subtitle = "Pooled cohorts of 1890 - 1905") +
ggsci::scale_colour_lancet() +
theme(legend.title=element_blank()) +
theme(
legend.position = c(.999, 0.001),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(color = "black", size = .5, linetype = "solid")) +
facet_wrap(~educ_decile)
ggsave(plot = plot, filename = here("figures/bw_crossover_disaggregated.pdf"), width = 15, height = 10)
plot
test <- dmf %>%
filter(byear %in% 1890:1905) %>%
filter(!is.na(educ_yrs)) %>%
filter(incwage %in% 1:5000) %>%
filter(!is.na(sei)) %>%
mutate(marst = as.factor(marst))
test
test
test <- dmf %>%
filter(byear %in% 1890:1905) %>%
filter(!is.na(educ_yrs)) %>%
filter(incwage %in% 1:5000) %>%
filter(!is.na(sei)) %>%
mutate(marst = as.factor(marst))
model <- lm(death_age ~  sei + educ_yrs + incwage + marst + as.factor(occ) + as.factor(byear), data = test)
modeling_df <- dmf %>%
filter(byear %in% 1890:1905) %>%
filter(!is.na(educ_yrs)) %>%
mutate(marst = as.factor(marst)) %>%
filter(race == "White Americans" | race == "Black Americans") %>%
group_by(race) %>%
mutate(educ_decile = ntile(educ_yrs, 5)) %>% ungroup()
modeling_df <- modeling_df %>%  bind_cols(tibble(score = predict(model, newdata = modeling_df))) %>%
group_by(byear) %>%
mutate(risk = ntile(score, 5))
estimated_mortality_rates <- modeling_df %>%
group_by(death_age, race, risk) %>%
summarize(weighted_total = n()) %>%
group_by(race, risk) %>%
mutate(lx = sum(weighted_total) - cumsum(weighted_total) + weighted_total) %>%
mutate(mx = weighted_total/(lx + lead(lx) / 2)) %>%
mutate(hazard = log(mx))
risk_bw_crossover <- estimated_mortality_rates %>%
filter(death_age %in% c(75:100)) %>%
mutate(risk = case_when(
risk == 1 ~ "1 (Low Risk)",
risk == 5 ~ "5 (High Risk)",
TRUE ~ as.character(risk)
)) %>%
mutate(hazard_smooth = zoo::rollmean(hazard, k = 3, fill = NA)) %>%
ggplot() +
geom_point(aes(x = death_age, y = hazard_smooth, shape = race, color = race), size = 4) +
geom_line(aes(x = death_age, y = hazard_smooth, color = race)) +
theme_bw(base_size = 25) +
geom_vline(xintercept  = 86, linetype = "dashed") +
theme(legend.position="bottom") +
labs(x = "Age",
y = "Log(Mx)",
title = "Mortality Crossovers (Men)",
subtitle = "Pooled cohorts of 1890 - 1905") +
ggsci::scale_colour_lancet() +
theme(legend.title=element_blank()) +
theme(
legend.position = c(.999, 0.001),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(color = "black", size = .5, linetype = "solid")) +
facet_wrap(~risk)
risk_bw_crossover
risk_bw_crossover
estimated_mortality_rates <- modeling_df %>%
group_by(death_age, race) %>%
summarize(weighted_total = n()) %>%
group_by(race) %>%
mutate(lx = sum(weighted_total) - cumsum(weighted_total) + weighted_total) %>%
mutate(mx = weighted_total/(lx + lead(lx) / 2)) %>%
mutate(hazard = log(mx))
diff_in_hazards = estimated_mortality_rates %>%
filter(death_age %in% c(75:100)) %>%
select(death_age, hazard, race) %>%
pivot_wider(
names_from = race,
values_from = hazard
) %>%
mutate(diff = `White Americans` - `Black Americans`)
lm(data = diff_in_hazards, diff ~ death_age)
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot()
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot()
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
labs(x = "Death Age",
y = "White log(hx) - Black log(hx) ")
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
labs(x = "Death Age",
y = "White log(hx) - Black log(hx)")
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
labs(x = "Death Age",
y = "White log(hx) - Black log(hx)",
title = "Difference in Hazards")
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
labs(x = "Death Age",
y = "White log(hx) - Black log(hx)",
title = "Difference in Log Hazards (White - Black)")
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
labs(x = "Death Age",
y = "White log(hx) - Black log(hx)",
title = "Difference in Log Hazards (White - Black)")
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
facet_wrap(~educ_decile)
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
facet_wrap(~risk)
estimated_mortality_rates <- dmf %>%
filter(byear %in% c(1890:1905)) %>%
filter(!is.na(educ_yrs)) %>%
filter(race == "White Americans" | race == "Black Americans") %>%
group_by(race) %>%
mutate(educ_decile = ntile(educ_yrs, 5)) %>%
group_by(death_age, race, educ_decile) %>%
summarize(weighted_total = n()) %>%
group_by(race, educ_decile) %>%
mutate(lx = sum(weighted_total) - cumsum(weighted_total) + weighted_total) %>%
mutate(mx = weighted_total/(lx + lead(lx) / 2)) %>%
mutate(hazard = log(mx))
plot <- estimated_mortality_rates %>%
filter(death_age %in% c(75:100)) %>%
ggplot() +
geom_point(aes(x = death_age, y = hazard, shape = race, color = race), size = 4) +
geom_line(aes(x = death_age, y = hazard, color = race)) +
theme_bw(base_size = 25) +
geom_vline(xintercept  = 86, linetype = "dashed") +
theme(legend.position="bottom") +
labs(x = "Age",
y = "Log(Mx)",
title = "Mortality Crossovers (Men)",
subtitle = "Pooled cohorts of 1890 - 1905") +
ggsci::scale_colour_lancet() +
theme(legend.title=element_blank()) +
theme(
legend.position = c(.999, 0.001),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(color = "black", size = .5, linetype = "solid")) +
facet_wrap(~educ_decile)
plot
plot <- estimated_mortality_rates %>%
mutate(educ_decile = case_when(
educ_decile == 1 ~ "1 (Low Risk)",
educ_decile == 5 ~ "5 (High Risk)",
TRUE ~ as.character(educ_decile)
)) %>%
filter(death_age %in% c(75:100)) %>%
ggplot() +
geom_point(aes(x = death_age, y = hazard, shape = race, color = race), size = 4) +
geom_line(aes(x = death_age, y = hazard, color = race)) +
theme_bw(base_size = 25) +
geom_vline(xintercept  = 86, linetype = "dashed") +
theme(legend.position="bottom") +
labs(x = "Age",
y = "Log(Mx)",
title = "Mortality Crossovers (Men)",
subtitle = "Pooled cohorts of 1890 - 1905") +
ggsci::scale_colour_lancet() +
theme(legend.title=element_blank()) +
theme(
legend.position = c(.999, 0.001),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(color = "black", size = .5, linetype = "solid")) +
facet_wrap(~educ_decile)
plot
plot <- estimated_mortality_rates %>%
mutate(educ_decile = case_when(
educ_decile == 1 ~ "1 (Low Education)",
educ_decile == 5 ~ "5 (High Education)",
TRUE ~ as.character(educ_decile)
)) %>%
filter(death_age %in% c(75:100)) %>%
ggplot() +
geom_point(aes(x = death_age, y = hazard, shape = race, color = race), size = 4) +
geom_line(aes(x = death_age, y = hazard, color = race)) +
theme_bw(base_size = 25) +
geom_vline(xintercept  = 86, linetype = "dashed") +
theme(legend.position="bottom") +
labs(x = "Age",
y = "Log(Mx)",
title = "Mortality Crossovers (Men)",
subtitle = "Pooled cohorts of 1890 - 1905") +
ggsci::scale_colour_lancet() +
theme(legend.title=element_blank()) +
theme(
legend.position = c(.999, 0.001),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(color = "black", size = .5, linetype = "solid")) +
facet_wrap(~educ_decile)
ggsave(plot = plot, filename = here("figures/bw_crossover_disaggregated.pdf"), width = 15, height = 10)
estimated_mortality_rates <- modeling_df %>%
group_by(death_age, race, risk) %>%
summarize(weighted_total = n()) %>%
group_by(race, risk) %>%
mutate(lx = sum(weighted_total) - cumsum(weighted_total) + weighted_total) %>%
mutate(mx = weighted_total/(lx + lead(lx) / 2)) %>%
mutate(hazard = log(mx))
risk_bw_crossover <- estimated_mortality_rates %>%
filter(death_age %in% c(75:100)) %>%
mutate(risk = case_when(
risk == 1 ~ "1 (Low Risk)",
risk == 5 ~ "5 (High Risk)",
TRUE ~ as.character(risk)
)) %>%
mutate(hazard_smooth = zoo::rollmean(hazard, k = 3, fill = NA)) %>%
ggplot() +
geom_point(aes(x = death_age, y = hazard_smooth, shape = race, color = race), size = 4) +
geom_line(aes(x = death_age, y = hazard_smooth, color = race)) +
theme_bw(base_size = 25) +
geom_vline(xintercept  = 86, linetype = "dashed") +
theme(legend.position="bottom") +
labs(x = "Age",
y = "Log(Mx)",
title = "Mortality Crossovers (Men)",
subtitle = "Pooled cohorts of 1890 - 1905") +
ggsci::scale_colour_lancet() +
theme(legend.title=element_blank()) +
theme(
legend.position = c(.999, 0.001),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(color = "black", size = .5, linetype = "solid")) +
facet_wrap(~risk)
ggsave(plot = risk_bw_crossover, filename = here("figures/bw_crossover_disaggregated_risk.pdf"), width = 15, height = 10)
estimated_mortality_rates <- modeling_df %>%
group_by(death_age, race, risk) %>%
summarize(weighted_total = n()) %>%
group_by(race, risk) %>%
mutate(lx = sum(weighted_total) - cumsum(weighted_total) + weighted_total) %>%
mutate(mx = weighted_total/(lx + lead(lx) / 2)) %>%
mutate(hazard = log(mx))
diff_in_hazards = estimated_mortality_rates %>%
filter(death_age %in% c(75:100)) %>%
mutate(risk = case_when(
risk == 1 ~ "1 (Low Risk)",
risk == 5 ~ "5 (High Risk)",
TRUE ~ as.character(risk)
)) %>%
select(risk, death_age, hazard, race) %>%
pivot_wider(
names_from = race,
values_from = hazard
) %>%
mutate(diff = `White Americans` - `Black Americans`)
lm(data = diff_in_hazards %>% filter(risk == 5), diff ~ death_age)
estimated_mortality_rates <- modeling_df %>%
group_by(death_age, race, risk) %>%
summarize(weighted_total = n()) %>%
group_by(race, risk) %>%
mutate(lx = sum(weighted_total) - cumsum(weighted_total) + weighted_total) %>%
mutate(mx = weighted_total/(lx + lead(lx) / 2)) %>%
mutate(hazard = log(mx))
diff_in_hazards = estimated_mortality_rates %>%
filter(death_age %in% c(75:100)) %>%
mutate(risk = case_when(
risk == 1 ~ "1 (Low Risk)",
risk == 5 ~ "5 (High Risk)",
TRUE ~ as.character(risk)
)) %>%
select(risk, death_age, hazard, race) %>%
pivot_wider(
names_from = race,
values_from = hazard
) %>%
mutate(diff = `White Americans` - `Black Americans`)
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
facet_wrap(~risk)
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
facet_wrap(~risk)
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
facet_wrap(~risk) +
labs(x = "Death Age",
y = "White log(hx) - Black log(hx)",
title = "Difference in Log Hazards (White - Black)")
ggplot(data = diff_in_hazards) +
aes(x = death_age, y = diff) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = F) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_cowplot() +
facet_wrap(~risk) +
labs(x = "Death Age",
y = "White log(hx) - Black log(hx)",
title = "Difference in Log Hazards (White - Black)")
install.packages("blogdown")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
git status
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
git add -A
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
#load packages
library(igraph)
library(expandR)
install.packages("expandR")
# Create a vector of 100 nodes
nodes <- c(1:100)
# Create a vector of 100 different levels of clustering
clustering <- c(runif(100))
# Initialize an empty list to store networks
networks <- list()
# Generate the 100 networks
for (i in 1:length(nodes)) {
# Create a blockmodel with 100 nodes and clustering level corresponding to the ith element in the vector clustering
model <- blockmodel(nodes, clustering[i])
# Create a network with the same level of connectivity as the blockmodel
network <- network.initialize(model, directed = FALSE, circular = FALSE)
# Add the network to the list
networks[[i]] <- network
}
library(igraph)
# Generate empty 100 node network
networks <- list()
for (i in 1:100) {
networks[[i]] <- graph.empty(100, directed=FALSE)
}
# Set level of connectivity
for (i in 1:100) {
networks[[i]] <- add.edges(networks[[i]], c(1:100))
}
# Set level of clustering
for (i in 1:100) {
networks[[i]] <- blockmodel(networks[[i]], c(rep(2, 50), rep(1, 50)))
}
install.packages("sna")
library(igraph)
library(sna)
# Generate empty 100 node network
networks <- list()
for (i in 1:100) {
networks[[i]] <- graph.empty(100, directed=FALSE)
}
# Set level of connectivity
for (i in 1:100) {
networks[[i]] <- add.edges(networks[[i]], c(1:100))
}
#Solution
#load library
library(igraph)
#create a vector of 10 possible clustering levels
clustering_levels <- c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
#create a loop to generate the networks
for (level in clustering_levels) {
network <- make_small_world(n=100, k=8, p=0.1, set_opts(clustering = level))
plot(network, main = paste("Clustering level:", level))
}
library(tidyverse)
data <- fread("~/Downloads/data/predictions/prediction_day1.rds")
data <- read_rds("~/Downloads/data/predictions/prediction_day1.rds")
data
data %>% filter(state == "CA")
data[[1]] %>% filter(state == "CA")
